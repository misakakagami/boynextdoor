<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.autotestplatform.dao.ModelMapper">
  <resultMap id="BaseResultMap" type="com.autotestplatform.entity.Model">
    <id column="model_id" jdbcType="INTEGER" property="modelId" />
    <result column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="model_name" jdbcType="VARCHAR" property="modelName" />
    <result column="model_url" jdbcType="VARCHAR" property="modelUrl" />
    <result column="model_status" jdbcType="INTEGER" property="modelStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="update_user_id" jdbcType="INTEGER" property="updateUserId" />
  </resultMap>
  <resultMap id="DtoResultMap" type="com.autotestplatform.dto.common.ModelDto">
    <id column="model_id" jdbcType="INTEGER" property="modelId" />
    <result column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="model_name" jdbcType="VARCHAR" property="modelName" />
    <result column="model_url" jdbcType="VARCHAR" property="modelUrl" />
    <result column="model_status" jdbcType="INTEGER" property="modelStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="update_user_id" jdbcType="INTEGER" property="updateUserId" />
  </resultMap>
  <sql id="Base_Column_List">
    model_id, project_id, model_name, model_url, model_status, create_time, update_time, 
    create_user_id, update_user_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="DtoResultMap">
    select 
    <include refid="Base_Column_List" />
    from model
    where model_id = #{modelId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from model
    where model_id = #{modelId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.autotestplatform.entity.Model">
    insert into model (project_id, model_name, 
      model_url, model_status, create_time, 
      update_time, create_user_id, update_user_id
      )
    values (#{projectId,jdbcType=INTEGER}, #{modelName,jdbcType=VARCHAR}, 
      #{modelUrl,jdbcType=VARCHAR}, #{modelStatus,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=INTEGER}, #{updateUserId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.autotestplatform.entity.Model">
    insert into model
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        project_id,
      </if>
      <if test="modelName != null">
        model_name,
      </if>
      <if test="modelUrl != null">
        model_url,
      </if>
      <if test="modelStatus != null">
        model_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="modelName != null">
        #{modelName,jdbcType=VARCHAR},
      </if>
      <if test="modelUrl != null">
        #{modelUrl,jdbcType=VARCHAR},
      </if>
      <if test="modelStatus != null">
        #{modelStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.autotestplatform.entity.Model">
    update model
    <set>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="modelName != null">
        model_name = #{modelName,jdbcType=VARCHAR},
      </if>
      <if test="modelUrl != null">
        model_url = #{modelUrl,jdbcType=VARCHAR},
      </if>
      <if test="modelStatus != null">
        model_status = #{modelStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
    </set>
    where model_id = #{modelId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.autotestplatform.entity.Model">
    update model
    set project_id = #{projectId,jdbcType=INTEGER},
      model_name = #{modelName,jdbcType=VARCHAR},
      model_url = #{modelUrl,jdbcType=VARCHAR},
      model_status = #{modelStatus,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      update_user_id = #{updateUserId,jdbcType=INTEGER}
    where model_id = #{modelId,jdbcType=INTEGER}
  </update>
  <select id="selectListCountBySelective" parameterType="map" resultType="java.lang.Integer">
    select 
    count(1)
    from model
    <where>
      <if test="modelId!= null">
        model_id = #{modelId,jdbcType=INTEGER} 
      </if>
      <if test="projectId != null">
        and project_id = #{projectId,jdbcType=INTEGER} 
      </if>
      <if test="searchContent != null">
        and model_name like '%${searchContent}%'
      </if>
      <if test="modelStatus != null">
        and model_status = #{modelStatus,jdbcType=INTEGER}
      </if>
	</where>
  </select>
  <select id="selectListBySelective" parameterType="map" resultType="com.autotestplatform.dto.model.list.ModelListOutDetailDto">
    select 
      m.model_id as modelId, 
      m.project_id as projectId, 
      m.model_name as modelName, 
      m.model_url as modelUrl, 
      m.model_status as modelStatus, 
      m.create_time as createTime, 
      m.update_time as updateTime, 
      m.create_user_id as createUserId, 
      m.update_user_id as updateUserId,
      p.project_name as projectName
    from model m,project p
    <where>
      m.project_id = p.project_id
      <if test="modelId != null">
        and m.model_id = #{modelId,jdbcType=INTEGER} 
      </if>
      <if test="projectId != null">
        and m.project_id = #{projectId,jdbcType=INTEGER} 
      </if>
      <if test="searchContent != null">
        and model_name like '%${searchContent}%'
      </if>
      <if test="modelStatus != null">
        and model_status = #{modelStatus,jdbcType=INTEGER}
      </if>
	</where>
	order by m.model_status desc 
	limit #{pageNow},#{pageSize}
  </select>
  <select id="selectAllIdNameList" resultType="com.autotestplatform.dto.common.ModelIdNameDto">
    select 
      model_id as modelId,
      model_name as modelName
    from model
  </select>
  <select id="selectModelIdNameList" parameterType="java.lang.Integer" resultType="com.autotestplatform.dto.common.ModelIdNameDto">
    select 
      model_id as modelId,
      model_name as modelName
    from model
    <if test="projectId != null">
      where project_id=#{projectId,jdbcType=INTEGER}
    </if>
  </select>
  <select id="selectProjectIdByModelId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select 
      project_id
    from model
      where model_id = #{modelId,jdbcType=INTEGER}
  </select>
</mapper>