<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.autotestplatform.dao.ProjectMapper">
  <resultMap id="BaseResultMap" type="com.autotestplatform.entity.Project">
    <id column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="project_name" jdbcType="VARCHAR" property="projectName" />
    <result column="project_url" jdbcType="VARCHAR" property="projectUrl" />
    <result column="project_mode" jdbcType="INTEGER" property="projectMode" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="update_user_id" jdbcType="INTEGER" property="updateUserId" />
  </resultMap>
  <resultMap id="ProjectListOutDetailDtoResultMap" type="com.autotestplatform.dto.project.list.ProjectListOutDetailDto">
    <id column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="project_name" jdbcType="VARCHAR" property="projectName" />
    <result column="project_url" jdbcType="VARCHAR" property="projectUrl" />
    <result column="project_mode" jdbcType="INTEGER" property="projectMode" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="update_user_id" jdbcType="INTEGER" property="updateUserId" />
  </resultMap>
  <sql id="Base_Column_List">
    project_id, project_name, project_url, project_mode, create_time, update_time, create_user_id, 
    update_user_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from project
    where project_id = #{projectId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from project
    where project_id = #{projectId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.autotestplatform.entity.Project">
    insert into project (project_name, project_url, 
      project_mode, create_time, update_time, 
      create_user_id, update_user_id)
    values (#{projectName,jdbcType=VARCHAR}, #{projectUrl,jdbcType=VARCHAR}, 
      #{projectMode,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createUserId,jdbcType=INTEGER}, #{updateUserId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.autotestplatform.entity.Project">
    insert into project
    <trim prefix="(" suffix=")" suffixOverrides=",">
      project_id,
      <if test="projectName != null">
        project_name,
      </if>
      <if test="projectUrl != null">
        project_url,
      </if>
      <if test="projectMode != null">
        project_mode,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="projectName != null">
        #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="projectUrl != null">
        #{projectUrl,jdbcType=VARCHAR},
      </if>
      <if test="projectMode != null">
        #{projectMode,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.autotestplatform.entity.Project">
    update project
    <set>
      <if test="projectName != null">
        project_name = #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="projectUrl != null">
        project_url = #{projectUrl,jdbcType=VARCHAR},
      </if>
      <if test="projectMode != null">
        project_mode = #{projectMode,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
    </set>
    where project_id = #{projectId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.autotestplatform.entity.Project">
    update project
    set project_name = #{projectName,jdbcType=VARCHAR},
      project_url = #{projectUrl,jdbcType=VARCHAR},
      project_mode = #{projectMode,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      update_user_id = #{updateUserId,jdbcType=INTEGER}
    where project_id = #{projectId,jdbcType=INTEGER}
  </update>
  <select id="selectListCountBySelective" parameterType="map" resultType="java.lang.Integer">
    select count(1) 
    from project
    <where>
      <if test="projectId != null">
        project_id = #{projectId}
      </if>
      <if test="projectName != null">
        and project_name like '%${searchContent}%' 
      </if>
      <if test="projectMode != null">
        and project_mode = #{projectMode} 
      </if>
    </where> 
  </select>
  <select id="selectListBySelective" parameterType="map" resultMap="ProjectListOutDetailDtoResultMap">
    select 
    <include refid="Base_Column_List" />
    from project
    <where>
	  <if test="projectId != null">
	    project_id = #{projectId}
	  </if>
	  <if test="projectName != null">
        and project_name like '%${searchContent}%' 
	  </if>
      <if test="projectMode != null">
        and project_mode = #{projectMode} 
      </if>
    </where> 
    order by project_mode desc
    limit #{pageNow},#{pageSize}
  </select>
  <select id="selectAllIdAndName"  resultType="com.autotestplatform.dto.common.ProjectIdNameDto">
    select 
      project_id as projectId,
      project_name as projectName
    from project
  </select>
</mapper>