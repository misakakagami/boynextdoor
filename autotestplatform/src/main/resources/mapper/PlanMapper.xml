<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.autotestplatform.dao.PlanMapper">
	<resultMap id="BaseResultMap" type="com.autotestplatform.entity.Plan">
		<id column="plan_id" jdbcType="INTEGER" property="planId" />
		<result column="plan_name" jdbcType="VARCHAR" property="planName" />
		<result column="plan_intro" jdbcType="VARCHAR" property="planIntro" />
		<result column="plan_type" jdbcType="INTEGER" property="planType" />
		<result column="plan_status" jdbcType="INTEGER" property="planStatus" />
		<result column="plan_start_time" jdbcType="TIMESTAMP" property="planStartTime" />
		<result column="plan_sum_times" jdbcType="INTEGER" property="planSumTimes" />
		<result column="plan_interval" jdbcType="INTEGER" property="planInterval" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
		<result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
		<result column="update_user_id" jdbcType="INTEGER" property="updateUserId" />
	</resultMap>
	<sql id="Base_Column_List">
		plan_id, plan_name, plan_intro, plan_type, plan_status, plan_start_time,
		plan_sum_times,
		plan_interval, create_time, update_time, create_user_id, update_user_id
	</sql>
	<select id="selectPlanList" parameterType="map"
		resultType="com.autotestplatform.dto.plan.list.PlanListDetailDto">
		select
	        plan_id as planId,
		  	plan_name as planName,
			plan_intro as planIntro,
			plan_type as planType,
			plan_status as planStatus,
			plan_start_time as planStartTime,
			plan_sum_times as planSumTimes,
			plan_interval as planInterval,
			create_time as createTime,
			update_time as updateTime,
			create_user_id as createUserId,
			update_user_id as updateUserId
		from plan
		<if test="planName !=null">
			where plan_name like '#{planName,jdbcType=VARCHAR}'
		</if>
		<if test="planType !=null">
			and plan_type like #{planType,jdbcType=INTEGER}
		</if>
		order by plan_status desc
		limit #{pageNow},#{pageSize}
	</select>
	<select id="selectPlanListCount" parameterType="map" resultType="java.lang.Integer">
		select count(1)
		from plan
		<if test="planName !=null">
			where plan_name like '#{planName,jdbcType=VARCHAR}'
		</if>
		<if test="planType !=null">
			and plan_type like #{planType,jdbcType=INTEGER}
		</if>
	</select>

	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from plan
		where plan_id = #{planId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from plan
		where plan_id = #{planId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.autotestplatform.entity.Plan">
		insert into plan (plan_name, plan_intro,
		plan_type, plan_status, plan_start_time,
		plan_sum_times, plan_interval, create_time,
		update_time, create_user_id, update_user_id
		)
		values (#{planName,jdbcType=VARCHAR}, #{planIntro,jdbcType=VARCHAR},
		#{planType,jdbcType=INTEGER}, #{planStatus,jdbcType=INTEGER},
		#{planStartTime,jdbcType=TIMESTAMP},
		#{planSumTimes,jdbcType=INTEGER}, #{planInterval,jdbcType=INTEGER},
		#{createTime,jdbcType=TIMESTAMP},
		#{updateTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=INTEGER}, #{updateUserId,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.autotestplatform.entity.Plan">
		insert into plan
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="planName != null">
				plan_name,
			</if>
			<if test="planIntro != null">
				plan_intro,
			</if>
			<if test="planType != null">
				plan_type,
			</if>
			<if test="planStatus != null">
				plan_status,
			</if>
			<if test="planStartTime != null">
				plan_start_time,
			</if>
			<if test="planSumTimes != null">
				plan_sum_times,
			</if>
			<if test="planInterval != null">
				plan_interval,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="createUserId != null">
				create_user_id,
			</if>
			<if test="updateUserId != null">
				update_user_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="planName != null">
				#{planName,jdbcType=VARCHAR},
			</if>
			<if test="planIntro != null">
				#{planIntro,jdbcType=VARCHAR},
			</if>
			<if test="planType != null">
				#{planType,jdbcType=INTEGER},
			</if>
			<if test="planStatus != null">
				#{planStatus,jdbcType=INTEGER},
			</if>
			<if test="planStartTime != null">
				#{planStartTime,jdbcType=TIMESTAMP},
			</if>
			<if test="planSumTimes != null">
				#{planSumTimes,jdbcType=INTEGER},
			</if>
			<if test="planInterval != null">
				#{planInterval,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUserId != null">
				#{createUserId,jdbcType=INTEGER},
			</if>
			<if test="updateUserId != null">
				#{updateUserId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.autotestplatform.entity.Plan">
		update plan
		<set>
			<if test="planName != null">
				plan_name = #{planName,jdbcType=VARCHAR},
			</if>
			<if test="planIntro != null">
				plan_intro = #{planIntro,jdbcType=VARCHAR},
			</if>
			<if test="planType != null">
				plan_type = #{planType,jdbcType=INTEGER},
			</if>
			<if test="planStatus != null">
				plan_status = #{planStatus,jdbcType=INTEGER},
			</if>
			<if test="planStartTime != null">
				plan_start_time = #{planStartTime,jdbcType=TIMESTAMP},
			</if>
			<if test="planSumTimes != null">
				plan_sum_times = #{planSumTimes,jdbcType=INTEGER},
			</if>
			<if test="planInterval != null">
				plan_interval = #{planInterval,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUserId != null">
				create_user_id = #{createUserId,jdbcType=INTEGER},
			</if>
			<if test="updateUserId != null">
				update_user_id = #{updateUserId,jdbcType=INTEGER},
			</if>
		</set>
		where plan_id = #{planId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.autotestplatform.entity.Plan">
		update plan
		set plan_name = #{planName,jdbcType=VARCHAR},
		plan_intro = #{planIntro,jdbcType=VARCHAR},
		plan_type = #{planType,jdbcType=INTEGER},
		plan_status = #{planStatus,jdbcType=INTEGER},
		plan_start_time = #{planStartTime,jdbcType=TIMESTAMP},
		plan_sum_times = #{planSumTimes,jdbcType=INTEGER},
		plan_interval = #{planInterval,jdbcType=INTEGER},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		update_time = #{updateTime,jdbcType=TIMESTAMP},
		create_user_id = #{createUserId,jdbcType=INTEGER},
		update_user_id = #{updateUserId,jdbcType=INTEGER}
		where plan_id = #{planId,jdbcType=INTEGER}
	</update>
</mapper>