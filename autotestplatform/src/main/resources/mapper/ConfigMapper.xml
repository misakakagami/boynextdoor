<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.autotestplatform.dao.ConfigMapper">
  <resultMap id="BaseResultMap" type="com.autotestplatform.entity.Config">
    <id column="config_id" jdbcType="INTEGER" property="configId" />
    <result column="config_name" jdbcType="VARCHAR" property="configName" />
    <result column="config_status" jdbcType="INTEGER" property="configStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="update_user_id" jdbcType="INTEGER" property="updateUserId" />
  </resultMap>
  <sql id="Base_Column_List">
    config_id, config_name, config_status, create_time, update_time, create_user_id, update_user_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from config
    where config_id = #{configId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from config
    where config_id = #{configId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.autotestplatform.entity.Config" useGeneratedKeys="true" keyProperty="configId" keyColumn="config_id">
    insert into config (config_name, config_status, 
      create_time, update_time, create_user_id, 
      update_user_id)
    values (#{configName,jdbcType=VARCHAR}, #{configStatus,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=INTEGER}, 
      #{updateUserId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.autotestplatform.entity.Config" useGeneratedKeys="true" keyProperty="configId" keyColumn="config_id">
    insert into config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="configName != null">
        config_name,
      </if>
      <if test="configStatus != null">
        config_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="configName != null">
        #{configName,jdbcType=VARCHAR},
      </if>
      <if test="configStatus != null">
        #{configStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.autotestplatform.entity.Config">
    update config
    <set>
      <if test="configName != null">
        config_name = #{configName,jdbcType=VARCHAR},
      </if>
      <if test="configStatus != null">
        config_status = #{configStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
    </set>
    where config_id = #{configId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.autotestplatform.entity.Config">
    update config
    set config_name = #{configName,jdbcType=VARCHAR},
      config_status = #{configStatus,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      update_user_id = #{updateUserId,jdbcType=INTEGER}
    where config_id = #{configId,jdbcType=INTEGER}
  </update>
  <select id="selectBySelective" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from config
    <where>
      <if test="configName != null">
        config_name = #{configName,jdbcType=VARCHAR}
      </if>
      <if test="configStatus != null">
        and config_status = #{configStatus,jdbcType=INTEGER} 
      </if>
      <if test="userId != null">
        and create_user_id = #{userId,jdbcType=INTEGER}
      </if>
    </where>
  </select>
</mapper>