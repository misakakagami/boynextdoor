<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.autotestplatform.dao.MessageMapper">
  <resultMap id="BaseResultMap" type="com.autotestplatform.entity.Message">
    <id column="message_id" jdbcType="INTEGER" property="messageId" />
    <result column="message_name" jdbcType="VARCHAR" property="messageName" />
    <result column="message_content" jdbcType="VARCHAR" property="messageContent" />
    <result column="message_type" jdbcType="INTEGER" property="messageType" />
    <result column="foreign_id" jdbcType="INTEGER" property="foreignId" />
    <result column="message_status" jdbcType="INTEGER" property="messageStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="update_user_id" jdbcType="INTEGER" property="updateUserId" />
  </resultMap>
  <sql id="Base_Column_List">
    message_id, message_name, message_content, message_type, foreign_id, message_status, 
    create_time, update_time, create_user_id, update_user_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from message
    where message_id = #{messageId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from message
    where message_id = #{messageId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.autotestplatform.entity.Message">
    insert into message (message_name, message_content, 
      message_type, foreign_id, message_status, 
      create_time, update_time, create_user_id, 
      update_user_id)
    values (#{messageName,jdbcType=VARCHAR}, #{messageContent,jdbcType=VARCHAR}, 
      #{messageType,jdbcType=INTEGER}, #{foreignId,jdbcType=INTEGER}, #{messageStatus,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=INTEGER}, 
      #{updateUserId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.autotestplatform.entity.Message">
    <selectKey keyProperty="messageId" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="messageName != null">
        message_name,
      </if>
      <if test="messageContent != null">
        message_content,
      </if>
      <if test="messageType != null">
        message_type,
      </if>
      <if test="foreignId != null">
        foreign_id,
      </if>
      <if test="messageStatus != null">
        message_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="messageName != null">
        #{messageName,jdbcType=VARCHAR},
      </if>
      <if test="messageContent != null">
        #{messageContent,jdbcType=VARCHAR},
      </if>
      <if test="messageType != null">
        #{messageType,jdbcType=INTEGER},
      </if>
      <if test="foreignId != null">
        #{foreignId,jdbcType=INTEGER},
      </if>
      <if test="messageStatus != null">
        #{messageStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.autotestplatform.entity.Message">
    update message
    <set>
      <if test="messageName != null">
        message_name = #{messageName,jdbcType=VARCHAR},
      </if>
      <if test="messageContent != null">
        message_content = #{messageContent,jdbcType=VARCHAR},
      </if>
      <if test="messageType != null">
        message_type = #{messageType,jdbcType=INTEGER},
      </if>
      <if test="foreignId != null">
        foreign_id = #{foreignId,jdbcType=INTEGER},
      </if>
      <if test="messageStatus != null">
        message_status = #{messageStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
    </set>
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.autotestplatform.entity.Message">
    update message
    set message_name = #{messageName,jdbcType=VARCHAR},
      message_content = #{messageContent,jdbcType=VARCHAR},
      message_type = #{messageType,jdbcType=INTEGER},
      foreign_id = #{foreignId,jdbcType=INTEGER},
      message_status = #{messageStatus,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      update_user_id = #{updateUserId,jdbcType=INTEGER}
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
</mapper>